spring:
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        show_sql: false
        format_sql: true
        highlight_sql: true
        default_batch_fetch_size: 50

  data:
    redis:
      host: localhost
      port: 6379
      password:

  cloud:
    aws:
      region:
        static: ap-northeast-2
      credentials:
        access-key: access-key
        secret-key: secret-key
      s3:
        bucket: s3-bucket

  thymeleaf:
    cache: false

  mail:
    default-encoding: UTF-8
    host: smtp.gmail.com
    port: 587
    username: username
    password: password
    properties:
      mail:
        mime:
          charset: UTF-8
        transport:
          protocol: smtp
        debug: true
        smtp:
          auth: true
          starttls:
            enable: true

mail:
  auth:
    ttl: 600 # 초 단위 (기본 10분)

cors:
  allowed-origin-patterns: http://localhost:3000

encrypt:
  secret-key: 2da7acad220ffe59e6943c826ec1fcf879a4339521ff5837fa92aab485e94bcb # 테스트용 Secret Key
  salt: 45b24edcbc33a9d7b9d53b3c23ae70bae6f9d95e28132db3f35b920d0e466cde # 테스트용 Salt (Even Hex Number)

jwt:
  secret-key: 2da7acad220ffe59e6943c826ec1fcf879a4339521ff5837fa92aab485e94bcb # 테스트용 Secret Key
  access-token-validity-seconds: 7200
  refresh-token-validity-seconds: 1209600

slack:
  webhook:
    url: slack-webhook-url

decorator:
  datasource:
    p6spy:
      enable-logging: true

logging:
  level:
    org.springframework.core:
      LocalVariableTableParameterNameDiscoverer: error
